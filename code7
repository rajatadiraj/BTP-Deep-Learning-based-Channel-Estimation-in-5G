clear variables;
close all;
NumSC = 64; 
NumPilot = 64;
PilotSpacing = NumSC/NumPilot;
NumPilotSym = 1;
NumDataSym = 1;
NumOFDMsym = NumPilotSym + NumDataSym;
Mod_Constellation = [1-1j;1+1j;-1+1j;-1-1j]; 
NumClass = numel(Mod_Constellation);
Label = 1:NumClass; 
FixedPilot = 1/sqrt(2)*complex(sign(rand(1,NumPilot)-0.5),sign(rand(1,NumPilot)-0.5)); 
NumPath = 20;
LengthCP = 16; 
load('SavedChan.mat'); 
H = fft(h,NumSC,1); 
Es_N0_dB = 40;
Es_N0 = 10.^(Es_N0_dB./10);
N0 = 1./Es_N0;
NoiseVar = N0./2;
idxSC = 26;
MedianGain = median(abs(H).^2);
[PossibleSC,~] = find(logical(abs(H).^2 >= MedianGain) == 1);
X = [];
Y = []; 
NumPacketPerClass = 250*1e1; 
FixedPilotAll = repmat(FixedPilot,1,1,NumPacketPerClass); 
for c = 1:NumClass
    PilotSym = 1/sqrt(2)*complex(sign(rand(NumPilotSym,NumSC,NumPacketPerClass)-0.5),sign(rand(NumPilotSym,NumSC,NumPacketPerClass)-0.5)); 
    PilotSym(1:PilotSpacing:end) = FixedPilotAll;
    DataSym = 1/sqrt(2)*complex(sign(rand(NumDataSym,NumSC,NumPacketPerClass)-0.5),sign(rand(NumDataSym,NumSC,NumPacketPerClass)-0.5)); 
    CurrentSym = 1/sqrt(2)*Mod_Constellation(c)*ones(NumDataSym,1,NumPacketPerClass); 
    DataSym(:,idxSC,:) = CurrentSym;
    TransmittedPacket = [PilotSym;DataSym];
    ReceivedPacket = genTransmissionReceptionOFDM(TransmittedPacket,LengthCP,h,NoiseVar);
    DataLabel = Label(c)*ones(1,NumPacketPerClass); 
    [feature,label,~] = getFeatureAndLabel(real(ReceivedPacket),imag(ReceivedPacket),DataLabel,c);
    featureVec = mat2cell(feature,size(feature,1),ones(1,size(feature,2))); 
    X = [X featureVec];
    Y = [Y label]; 
end
X = X.';
Y = Y.';
tempX = [];
tempY = [];
for n = 1:NumPacketPerClass
    tempX = [tempX;X(n:NumPacketPerClass:end)];
    tempY = [tempY;Y(n:NumPacketPerClass:end)];
end
TrainSize = 4/5;
ValidSize = 1/5;
NumSample = NumClass*NumPacketPerClass;
XTrain = tempX(1:NumSample*TrainSize);
YTrain = categorical(tempY(1:NumSample*TrainSize));
XValid = tempX(NumSample*TrainSize+1:end);
YValid = categorical(tempY(NumSample*TrainSize+1:end));
save('TrainingData.mat','XTrain','YTrain','NumOFDMsym','NumSC','Label');
save('ValidationData.mat','XValid','YValid');
save('SimParameters.mat','NumPilotSym','NumDataSym','NumSC','idxSC','h','LengthCP','FixedPilot','Mod_Constellation','Label'); 
